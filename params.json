{
  "name": "browser-solc",
  "tagline": "Solidity compiler in the browser",
  "body": "###Solidity Compiler In the Browser\r\nSolc is the solidity compiler.  It usually runs on the Ethereum node.  Browser-solidity is an example for Solc in the browser, but it's hard to pick apart just the solc library from the entire application.  This repo is a wrapper that helps you do that.  browser-solc is a browserified version of [solc-js](https://github.com/ethereum/solc-js).  \r\n\r\n###[Demo app](https://s3.amazonaws.com/browser-solc.dappbench.com/index.html)\r\n\r\nYou should use browser-solc if you:\r\n* Want to do `solc.compile()` in your Dapp\r\n* Don't want to worry about browserify the solc-js npm package\r\n\r\n### Include this in your code\r\n```html\r\n<script src=\"http://code.dappbench.com/browser-solc.min.js\" type=\"text/javascript\"></script>\r\n```\r\n\r\n### Usage\r\n\r\n```javascript\r\n\r\n//Get a list of all possibile solc versions\r\nBrowserSolc.getVersions(function(soljsonSources, soljsonReleases) {\r\n  console.log(soljsonSources);\r\n  console.log(soljsonReleases);\r\n}\r\n\r\n//Load a specific compiler version\r\nBrowserSolc.loadVersion(\"soljson-v0.4.6+commit.2dabbdf0.js\", function(compiler) {\r\n  source = 'contract x { function g() {} }';\r\n  optimize = 1;\r\n  result = compiler.compile(source, optimize);\r\n  console.log(result);\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}